name: Pipeline
on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
  bandit:
    runs-on: ubuntu-latest
    steps:
      - uses: airtai/workflows/airt-bandit-check@main
  semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: airtai/workflows/airt-semgrep-check@main

  trivy:
    runs-on: ubuntu-22.04
    container:
      image: docker.io/aquasec/trivy:latest
    steps:
      - uses: actions/checkout@v3
      - run: apk update
      - run: apk add make
      - run: trivy --version
      - run: sh ./scripts/trivy_scan_repo.sh

  secrets_scan:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/airtai/airt-service-dev:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # This is to fix GIT not liking owner of the checkout dir - https://github.com/actions/runner/issues/2033#issuecomment-1204205989
      - run: chown -R $(id -u):$(id -g) $PWD
      - run: echo "PATH=$PATH:/root/.local/bin" >> $GITHUB_ENV
      - run: make check_git_history_for_secrets

  detect_secrets:
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/airtai/airt-service-dev:latest
    steps:
      - uses: actions/checkout@v3
      # This is to fix GIT not liking owner of the checkout dir - https://github.com/actions/runner/issues/2033#issuecomment-1204205989
      - run: chown -R $(id -u):$(id -g) $PWD
      - run: echo "PATH=$PATH:/root/.local/bin" >> $GITHUB_ENV
      - run: pip install -e ".[dev]"
      - run: make detect_secrets

  unit_test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    needs: [bandit, semgrep, trivy, secrets_scan, detect_secrets]
    container:
      image: ghcr.io/airtai/airt-service-dev:latest
    env:
      CAPTN_SERVER_URL: "http://airt-service:6006"
      CAPTN_SERVICE_USERNAME: "johndoe"
      CAPTN_SERVICE_PASSWORD: ${{ secrets.CI_AIRT_SERVICE_SUPER_USER_PASSWORD }}
      AIRT_SERVICE_SUPER_USER: "kumaran"

      DB_USERNAME: "root"
      DB_PASSWORD: "SuperSecretPassword"
      DB_HOST: "mysql"
      DB_PORT: 3306
      DB_DATABASE: "airt_service"
      DB_DATABASE_SERVER: "mysql"

      AIRT_SERVICE_SUPER_USER_PASSWORD: ${{ secrets.CI_AIRT_SERVICE_SUPER_USER_PASSWORD }}
      AIRT_TOKEN_SECRET_KEY: ${{ secrets.CI_AIRT_TOKEN_SECRET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      GOOGLE_CLIENT_ID: ${{ secrets.CI_GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.CI_GOOGLE_CLIENT_SECRET }}
      GITHUB_CLIENT_ID: ${{ secrets.CI_GITHUB_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.CI_GITHUB_CLIENT_SECRET }}
      INFOBIP_BASE_URL: ${{ secrets.CI_INFOBIP_BASE_URL }}
      INFOBIP_API_KEY: ${{ secrets.CI_INFOBIP_API_KEY }}
      INFOBIP_SENDER_ID: ${{ secrets.CI_INFOBIP_SENDER_ID }}

      CLICKHOUSE_USERNAME: ${{ secrets.CLICKHOUSE_USERNAME }}
      CLICKHOUSE_PASSWORD: ${{ secrets.CLICKHOUSE_PASSWORD }}
      CLICKHOUSE_HOST: ${{ secrets.CLICKHOUSE_HOST }}
      CLICKHOUSE_DATABASE: ${{ secrets.CLICKHOUSE_DATABASE }}
      CLICKHOUSE_PORT: ${{ secrets.CLICKHOUSE_PORT }}
      CLICKHOUSE_PROTOCOL: ${{ secrets.CLICKHOUSE_PROTOCOL }}
      CLICKHOUSE_EVENTS_TABLE: ${{ secrets.CLICKHOUSE_EVENTS_TABLE }}

      KAFKA_HOSTNAME: kafka
      KAFKA_PORT: 9092

      STORAGE_BUCKET_PREFIX: github-captn-client-testing-${{ github.run_id }}
      AZURE_STORAGE_ACCOUNT_PREFIX: ghcc${{ github.run_id }}
    services:
      airt-service:
        image: ghcr.io/airtai/airt-service:${{ github.GITHUB_REF_NAME == 'main' && 'latest' || 'dev'  }}
        env:
          STORAGE_BUCKET_PREFIX: github-captn-client-testing-${{ github.run_id }}
          AZURE_STORAGE_ACCOUNT_PREFIX: ghcc${{ github.run_id }}
          DB_USERNAME: "root"
          DB_PASSWORD: "SuperSecretPassword"
          DB_HOST: "mysql"
          DB_PORT: 3306
          DB_DATABASE: "airt_service"
          DB_DATABASE_SERVER: "mysql"
          AIRFLOW__CORE__SQL_ALCHEMY_CONN: "mysql+mysqldb://root:SuperSecretPassword@mysql:3306/airflow"
          AIRFLOW_PASSWORD: ${{ secrets.CI_AIRFLOW_PASSWORD }}
          JOB_EXECUTOR: "fastapi"
          AIRT_SERVICE_SUPER_USER_PASSWORD: ${{ secrets.CI_AIRT_SERVICE_SUPER_USER_PASSWORD }}
          AIRT_TOKEN_SECRET_KEY: ${{ secrets.CI_AIRT_TOKEN_SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          GOOGLE_CLIENT_ID: ${{ secrets.CI_GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.CI_GOOGLE_CLIENT_SECRET }}
          GITHUB_CLIENT_ID: ${{ secrets.CI_GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.CI_GITHUB_CLIENT_SECRET }}
          INFOBIP_BASE_URL: ${{ secrets.CI_INFOBIP_BASE_URL }}
          INFOBIP_API_KEY: ${{ secrets.CI_INFOBIP_API_KEY }}
          INFOBIP_SENDER_ID: ${{ secrets.CI_INFOBIP_SENDER_ID }}
          KAFKA_HOSTNAME: kafka
          KAFKA_PORT: 9092
        ports:
          - 8080:8080
          - 6006:6006
      mysql:
        image: mysql:8.0.31
        env:
          MYSQL_DATABASE: "airt_service"
          MYSQL_USER: "airt"
          MYSQL_PASSWORD: "SuperSecretPassword"
          MYSQL_ROOT_PASSWORD: "SuperSecretPassword"
        ports:
          - 3306:3306
      zookeeper:
        image: wurstmeister/zookeeper
      kafka:
        image: wurstmeister/kafka
        env:
          KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
          KAFKA_LISTENERS: "PLAINTEXT://:9092"
          KAFKA_CREATE_TOPICS: "training_request:1:1,training_status:1:1,prediction_request:1:1,prediction_status:1:1"
          KAFKA_ADVERTISED_HOST_NAME: "kafka"
        ports:
            - 9092:9092
    steps:
      - uses: actions/checkout@v3
      - run: chown -R $(id -u):$(id -g) $PWD
      - run: echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV

      - run: sleep 450
      - run: pip install -e ".[dev]"

      - name: Run test without failing
        id: run_test
        run: make test
        continue-on-error: true

      - run: make empty_bucket
      - name: Raise error if make test failed earlier
        if: steps.run_test.outcome != 'success'
        run: exit 1
