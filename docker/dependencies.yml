version: "3"
services:
    mysql:
        image: mysql:8.0.31
        profiles: ["dev"]
        hostname: $DB_HOST
        container_name: $DB_HOST
        ports:
            - "${PORT_PREFIX}3306:3306"
        environment:
            MYSQL_DATABASE: $DB_DATABASE
            MYSQL_ROOT_PASSWORD: $DB_PASSWORD
    zookeeper:
        image: wurstmeister/zookeeper
        profiles: ["dev"]
        hostname: $USER-zookeeper
        container_name: $USER-zookeeper

    kafka:
        image: wurstmeister/kafka
        profiles: ["dev"]
        deploy:
            replicas: 3
        environment:
            HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
            KAFKA_ZOOKEEPER_CONNECT: "${USER}-zookeeper:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTER:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: INTER://_{HOSTNAME_COMMAND}:9092
            KAFKA_LISTENERS: INTER://_{HOSTNAME_COMMAND}:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INTER
            KAFKA_CREATE_TOPICS: >-
              training_request:${NUM_PARTITIONS:-6}:${REPLICATION_FACTOR:-3},
              training_status:${NUM_PARTITIONS:-6}:${REPLICATION_FACTOR:-3},
              prediction_request:${NUM_PARTITIONS:-6}:${REPLICATION_FACTOR:-3},
              prediction_status:${NUM_PARTITIONS:-6}:${REPLICATION_FACTOR:-3}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
            - zookeeper
        healthcheck:
            test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "${USER}-zookeeper:2181" ]
            interval: 5s
            timeout: 10s
            retries: 5
